@model EntreEspeciesNuevo.Models.Cliente

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/form.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-switch@3.3.4/dist/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Anta&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
</head>




<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card rounded">
            <div class="card-body">
                <center> <h4 class="card-title" style="font-family: Arial, sans-serif;">Crear Cliente</h4></center>
                <hr />
            <form asp-action="Create" id="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group row">
                    <div class="col"
                        <label asp-for="TipoDocu" class="control-label">Tipo De Documento:</label>
                        <select asp-for="TipoDocu" class="form-control">                       
                            <option value="C.C">C.C</option>
                            <option value="T.I">T.I</option>
                            <option value="C.E">C.E</option>
                        </select>
                        <span asp-validation-for="TipoDocu" class="text-danger"></span>
                    </div>
                    <div class="col">
                          <label asp-for="DocumentoCliente" class="control-label">N° Documento:</label>
                          <input asp-for="DocumentoCliente" id="documentoCliente" class="form-control" type="text" oninput="validarDocumento(event)" onkeypress="return validarNumero(event)" required pattern="[0-9]{6,10}" title="El documento debe tener entre 6 y 10 dígitos." />
                          <span asp-validation-for="DocumentoCliente" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="NombreCliente" class="control-label">Nombre y Apellido:</label>
                    <input asp-for="NombreCliente" class="form-control" oninput="validarNombre(event)" />
                    <span asp-validation-for="NombreCliente" class="text-danger"></span>
                </div>
                <div class="form-group row">
                        <div class="col">
                            <label asp-for="Direccion" class="control-label">Dirección:</label>
                            <input asp-for="Direccion" class="form-control" oninput="validarDireccion(event)" />
                            <span asp-validation-for="Direccion" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label asp-for="Telefono" class="control-label">Teléfono:</label>
                            <input asp-for="Telefono" class="form-control" type="text" oninput="validarTelefono(event)" />
                            <span asp-validation-for="Telefono" class="text-danger"></span>
                        </div>
                </div>
                <div class="form-group">
                    <label asp-for="Correo" class="control-label">Correo:</label>
                    <input asp-for="Correo" class="form-control" type="email" oninput="validarCorreo(event)" />
                    <span asp-validation-for="Correo" class="text-danger"></span>
                </div>

                <center>
                    <div class="form-group text-center">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                            <button type="button" onclick="window.location.href='@Url.Action("Index")'" class="btn btn-secondary btn-gray">Cancelar</button>
                        </div>
                </center>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        // Función para validar los campos antes de enviar el formulario
        $("#form").submit(function (event) {
            event.preventDefault(); // Evita que el formulario se envíe automáticamente

            // Realizar todas las validaciones de los campos
            if (!$(this).valid()) {
                // Si alguna validación falla, retornar false para evitar el envío del formulario
                return false;
            }

            // Validar el campo de documento antes de continuar
            validarDocumento(function (documentoValido) {
                if (!documentoValido) {
                    // Si el documento no es válido, no se muestra la alerta de éxito y se detiene el envío del formulario
                    return false;
                }

                // Si el documento es válido, se procede a validar los demás campos
                if (!validarCampo('TipoDocu', 'Debe Seleccionar un Tipo de Documento')) return false;
                if (!validarCampo('NombreCliente', 'Debe Ingresar Un Nombre')) return false;
                if (!validarCampo('Direccion', 'Debe Ingresar Una Direccion')) return false;
                if (!validarCampo('Telefono', 'Debe Ingresar Un Telefono')) return false;
                if (!validarCampo('Correo', 'Debe Ingresar Un Correo')) return false;

                // Mostrar ventana de confirmación solo si todos los campos están llenos y correctos
                mostrarAlerta();
            });
        });
        // Función para validar el campo N° Documento
        function validarDocumento(callback) {
            var documento = document.getElementById("documentoCliente").value;
            if (!documento) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Por Favor Llene Los Campos',
                    text: 'Debe Ingresar Un Documento',
                    footer: 'Sistema de Información'
                });
                callback(false); // Indicar que la validación del documento falló
                return;
            }

            // Verificar en la base de datos si el documento ya existe
            $.ajax({
                url: '/Clientes/ValidarDocumento',
                method: 'POST',
                data: { documento: documento },
                success: function (response) {
                    if (response.existe) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'El documento ya está registrado',
                        });
                        callback(false); // Indicar que la validación del documento falló
                    } else {
                        callback(true); // Indicar que la validación del documento fue exitosa
                    }
                }
            });
        }

        // Función para mostrar una alerta de éxito y redirigir después de 3 segundos
        function mostrarAlerta() {
            Swal.fire({
                icon: 'success',
                title: 'Registro Exitoso',
                text: 'El Cliente se registró correctamente.',
                footer: 'Sistema de Información',
                showConfirmButton: false
            });

            setTimeout(function () {
                // Envía el formulario una vez que se muestre el SweetAlert
                document.getElementById("form").submit();
            }, 3000);
        }

        // Función para validar los campos
        function validarCampo(nombreCampo, mensaje) {
            if ($("[name='" + nombreCampo + "']").val().trim().length < 1) {
                mostrarAlertaWarning(mensaje);
                return false;
            }
            return true;
        }

        // Función para mostrar una alerta de advertencia
        function mostrarAlertaWarning(mensaje) {
            Swal.fire({
                icon: 'warning',
                title: 'Por Favor Llene Los Campos',
                text: mensaje,
                footer: 'Sistema de Información'
            });
        }
        // Función para validar que solo se ingresen números en el campo Teléfono
        function validarTelefono(event) {
            const inputValue = event.target.value;

            if (isNaN(inputValue)) {
                event.target.value = inputValue.replace(/[^\d]/g, '');

                Swal.fire({
                    icon: 'error',
                    title: 'Carácter inválido',
                    text: 'Solo se permite ingresar números',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        }

        // Función para validar que solo se ingresen letras en el campo Nombre
        function validarNombre(event) {
            const inputValue = event.target.value;

            if (/[^a-zA-ZñÑ\s]/.test(inputValue)) {
                event.target.value = inputValue.replace(/[^a-zA-ZñÑ\s]/g, '');

                Swal.fire({
                    icon: 'error',
                    title: 'Carácter inválido',
                    text: 'Solo se permite ingresar letras',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        }

        function validarNumero(event) {
            const charCode = event.keyCode;
            // Permitir teclas de control como Enter, Tab, etc.
            if (charCode == 13 || charCode == 9 || charCode == 8 || charCode == 46) {
                return true;
            }
            // Permitir números solamente
            if (charCode < 48 || charCode > 57) {
                event.preventDefault();
            }
        }
    </script>

    }






@* @model EntreEspeciesNuevo.Models.Cliente

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-image: url('/images/fondo.png');
        background-repeat: no-repeat;
        background-size: cover;
    }

    .container {
        margin-top: 50px;
    }

    .form-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border: 2px solid #007BFF;
        border-radius: 10px;
        margin: 0 auto;
        max-width: 400px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
    }

    .btn-primary {
        background-color: #007BFF;
        border-color: #007BFF;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .btn-cancel {
        background-color: #6c757d;
        border-color: #6c757d;
        color: #fff;
    }

        .btn-cancel:hover {
            background-color: #5a6268;
            border-color: #545b62;
            color: #fff;
        }

    .center-btn {
        text-align: center;
    }
</style>

<div class="container">
    <h1>INFORMACION DEL CLIENTE</h1>
    <hr />

    <div class="row">
        <div class="col-md-4 form-container">
            <form asp-action="Create" id="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="TipoDocu" class="control-label">Tipo Documento</label>
                    <select asp-for="TipoDocu" class="form-control">
                        <option value="Cedula de Ciudadania">Cedula de Ciudadania</option>
                        <option value="Cedula de extranjeria">Cedula de extranjeria</option>
                        <option value="Pasaporte">Pasaporte</option>
                    </select>
                    <span asp-validation-for="TipoDocu" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DocumentoCliente" class="control-label"></label>
                    <input asp-for="DocumentoCliente" class="form-control" required pattern=".{7,10}" title="El documento debe tener entre 7 y 10 caracteres." />
                    <span asp-validation-for="DocumentoCliente" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NombreCliente" class="control-label"></label>
                    <input asp-for="NombreCliente" class="form-control" oninput="validatenombre(event)" />
                    <span asp-validation-for="NombreCliente" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Direccion" class="control-label"></label>
                    <input asp-for="Direccion" class="form-control" />
                    <span asp-validation-for="Direccion" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Telefono" class="control-label"></label>
                    <input asp-for="Telefono" class="form-control" />
                    <span asp-validation-for="Telefono" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Correo" class="control-label"></label>
                    <input asp-for="Correo" class="form-control" />
                    <span asp-validation-for="Correo" class="text-danger"></span>
                </div>
                <center>
                    <div class="form-group">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                    </div>

                    <div>
                        <a asp-action="Index">Cencelar</a>
                    </div>
                </center>
            </form>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            $("#form").submit(function () {
                if (!validarCampo('DocumentoCliente', 'Debe Ingresar Un Documento')) return false;
                if (!validarCampo('NombreCliente', 'Debe Ingresar Un Nombre')) return false;
                if (!validarCampo('Direccion', 'Debe Ingresar Una Direccion')) return false;
                if (!validarCampo('Telefono', 'Debe Ingresar Un Telefono')) return false;
                if (!validarCampo('Correo', 'Debe Ingresar Un Correo')) return false;

                // Mostrar ventana de confirmación
                mostrarAlerta();
                return true; // Evitar el envío del formulario
            });


            function validarCampo(nombreCampo, mensaje) {
                if ($("[name='" + nombreCampo + "']").val().trim().length < 1) {
                    mostrarAlertaWarning(mensaje);
                    return false;
                }
                return true;
            }

            function mostrarAlertaWarning(mensaje) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Por Favor Llene Los Campos',
                    text: mensaje,
                    footer: 'Sistema de Información'
                });
            }

            function mostrarAlerta() {
                Swal.fire({
                    icon: 'success',
                    title: 'Registro Exitoso',
                    text: 'El Cliente se registró correctamente.',
                    footer: 'Sistema de Información',
                    showConfirmButton: false
                });

                setTimeout(function () {
                    // window.location.href = 'Clientes';
                    window.location.href = '/Clientes/Index';

                }, 3000);
            }
            function validatenombre(event) {
                const inputValue = event.target.value;

                if (/[^a-zA-Z\s]/.test(inputValue)) {
                    event.target.value = inputValue.replace(/[^a-zA-Z\s]/g, '');

                    Swal.fire({
                        icon: 'error',
                        title: 'Carácter inválido',
                        text: 'Solo se permite ingresar letras',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            }
            function validatedocumento(event) {
                const keyCode = event.keyCode || event.which;
                const allowedKeys = [8, 9, 37, 39, 46]; // Teclas permitidas: retroceso, tabulación, flechas izquierda/derecha, suprimir
                const inputValue = event.target.value;

                if (!allowedKeys.includes(keyCode) && isNaN(inputValue)) {
                    // Eliminar el último carácter ingresado
                    event.target.value = event.target.value.slice(0, -1);

                    Swal.fire({
                        icon: 'error',
                        title: 'Carácter inválido',
                        text: 'Solo se permite ingresar números',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            }
        </script>
    }
 *@