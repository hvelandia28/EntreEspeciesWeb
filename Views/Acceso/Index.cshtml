@{
    ViewData["Title"] = "Inicio de Sesión";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        background-image: url('/images/logipa.png');
        background-repeat: no-repeat;
        background-size: cover;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        margin-right: 120px;
    }

    .container {
        margin-top: 50px;
    }

    .form-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border: 2px solid #007BFF;
        border-radius: 10px;
        max-width: 400px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
    }

    .btn-primary {
        background-color: #007BFF;
        border-color: #007BFF;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .center-btn {
        text-align: center;
    }
</style>
@{
    var RecuperarContraseñas = ViewBag.RecuperarContraseñas;

}
<div class="container text-center mt-5">
    @if (ViewData.ModelState["correo"] != null && ViewData.ModelState["correo"].Errors.Count > 0)
    {
        <p class="text-danger">@Html.ValidationMessage("correo")</p>
    }
    
    @if (ViewData.ModelState["contraseña"] != null && ViewData.ModelState["contraseña"].Errors.Count > 0)
    {
        <p class="text-danger">@Html.ValidationMessage("contraseña")</p>
    }

    <div class="row">
        <div class="col-md-6">
            <img src="~/images/logor.png" width="400px" alt="Logo" class="img-fluid">
        </div>
        <div class="col-md-6 form-container">
            <form class="mb-4" method="post" asp-action="Index" asp-controller="Acceso" onsubmit="return validateForm()">
                <h1 class="mb-4">Iniciar Sesión</h1>

                <div class="form-group">
                    <label for="correo">Correo:</label>
                    <input type="text" class="form-control" id="correo" name="correo" />
                </div>
                <div class="form-group">
                    <label for="contraseña">Contraseña:</label>
                    <input type="password" class="form-control" id="contraseña" name="contraseña" />
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <button type="submit" class="btn btn-primary">Iniciar Sesión</button><br />

                    <a class="text-info" href="@Url.Action("OlvidoContraseña", "Acceso")">¿Olvidaste tu contraseña?</a>

            </form>
        </div>
    </div>
</div>

<script>
    function validateForm() {
        // Verifica si los campos de correo y contraseña están vacíos y muestra SweetAlert
        var correoIsEmpty = document.getElementById("correo").value.trim() === "";
        var contraseñaIsEmpty = document.getElementById("contraseña").value.trim() === "";

        if (correoIsEmpty || contraseñaIsEmpty) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Por favor, complete ambos campos.'
            });
            return false; // Evita que el formulario se envíe si hay campos vacíos
        }

        return true; // Permite que el formulario se envíe si la validación es exitosa
    }
</script>