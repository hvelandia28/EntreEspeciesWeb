@model EntreEspeciesNuevo.Models.Configuracion

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/form.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-switch@3.3.4/dist/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Anta&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
</head>



<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card rounded">
            <div class="card-body">
                <center> <h4 class="card-title" style="font-family: Arial, sans-serif;">Permisos</h4></center>
                <hr />
                <form asp-action="Create" id="configuracionForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input type="hidden" asp-for="IdRol" value="@ViewData["RolId"]" />
                    </div>

                    <div class="form-group" style=" font-size: 25px;">
                        <label class="selectAllLabel"><input type="checkbox" id="selectAll"> Seleccionar Todos</label>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6">
                            @if (ViewData["Permisos"] != null)
                            {
                                var permisos = ViewData["Permisos"] as List<Permiso>;
                                var halfCount = (int)Math.Ceiling((double)permisos.Count / 2);
                                for (var i = 0; i < halfCount; i++)
                                {
                                    var permiso = permisos[i];
                                    <div class="checkbox" style="font-size: 18px;">
                                        <label>
                                            <input type="checkbox" class="permisoCheckbox" name="selectedPermisos" value="@permiso.IdPermiso" />
                                            @permiso.NomPermiso
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No hay permisos disponibles.</p>
                            }
                        </div>
                        <div class="col-md-6">
                            @if (ViewData["Permisos"] != null)
                            {
                                var permisos = ViewData["Permisos"] as List<Permiso>;
                                var halfCount = (int)Math.Ceiling((double)permisos.Count / 2);
                                for (var i = halfCount; i < permisos.Count; i++)
                                {
                                    var permiso = permisos[i];
                                    <div class="checkbox" style="font-size: 18px;">
                                        <label>
                                            <input type="checkbox" class="permisoCheckbox" name="selectedPermisos" value="@permiso.IdPermiso" />
                                            @permiso.NomPermiso
                                        </label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group center-btn">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#selectAll').change(function () {
                var isChecked = $(this).prop('checked');
                $('.permisoCheckbox').prop('checked', isChecked);
            });
            // Manejar la lógica de selección automática aquí
            $('.permisoCheckbox').change(function () {
                // ID del permiso seleccionado
                var selectedPermisoId = $(this).val();

                // Lógica de selección automática basada en el ID del permiso seleccionado
                if (selectedPermisoId === '1' || selectedPermisoId === '4') { // Si se selecciona "Registrar Usuario" (ID 1)
                    // Seleccionar automáticamente "Ver Usuarios" (ID 6)
                    $('[value="6"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '7' || selectedPermisoId === '8') {
                    $('[value="50"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '25' || selectedPermisoId === '26' || selectedPermisoId === '58') {
                    $('[value="27"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '10' || selectedPermisoId === '12') {
                    $('[value="11"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '15' || selectedPermisoId === '14') {
                    $('[value="56"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '17') {
                    $('[value="18"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '21') {
                    $('[value="23"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '29' || selectedPermisoId === '30') {
                    $('[value="28"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '33' || selectedPermisoId === '34' || selectedPermisoId === '38') {
                    $('[value="32"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '35' || selectedPermisoId === '34' || selectedPermisoId === '36') {
                    $('[value="57"].permisoCheckbox').prop('checked', true);
                } else if (selectedPermisoId === '53' || selectedPermisoId === '34' || selectedPermisoId === '54') {
                    $('[value="52"].permisoCheckbox').prop('checked', true);
                }
                // Puedes agregar más lógica de selección automática aquí según tus necesidades

                // Verificar si se han seleccionado todos los permisos manualmente después de la selección automática
                var allChecked = $('.permisoCheckbox:checked').length === $('.permisoCheckbox').length;
                $('#selectAll').prop('checked', allChecked);

                // Deshabilitar el checkbox del permiso con ID 6 si el permiso con ID 1 está seleccionado
                if ($('[value="1"].permisoCheckbox').prop('checked') || $('[value="4"].permisoCheckbox').prop('checked')) {
                    $('[value="6"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="6"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="7"].permisoCheckbox').prop('checked') || $('[value="8"].permisoCheckbox').prop('checked')) {
                    $('[value="50"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="50"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="10"].permisoCheckbox').prop('checked') || $('[value="12"].permisoCheckbox').prop('checked')) {
                    $('[value="11"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="11"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="14"].permisoCheckbox').prop('checked') || $('[value="15"].permisoCheckbox').prop('checked')) {
                    $('[value="56"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="56"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="25"].permisoCheckbox').prop('checked') || $('[value="26"].permisoCheckbox').prop('checked') || $('[value="58"].permisoCheckbox').prop('checked')) {
                    $('[value="27"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="27"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="17"].permisoCheckbox').prop('checked')) {
                    $('[value="18"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="18"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="21"].permisoCheckbox').prop('checked')) {
                    $('[value="23"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="23"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="29"].permisoCheckbox').prop('checked') || $('[value="30"].permisoCheckbox').prop('checked')) {
                    $('[value="28"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="28"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="33"].permisoCheckbox').prop('checked') || $('[value="34"].permisoCheckbox').prop('checked') || $('[value="38"].permisoCheckbox').prop('checked')) {
                    $('[value="32"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="32"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="35"].permisoCheckbox').prop('checked') || $('[value="36"].permisoCheckbox').prop('checked')) {
                    $('[value="57"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="57"].permisoCheckbox').prop('disabled', false);
                }
                if ($('[value="53"].permisoCheckbox').prop('checked') || $('[value="54"].permisoCheckbox').prop('checked')) {
                    $('[value="52"].permisoCheckbox').prop('disabled', true);
                } else {
                    $('[value="52"].permisoCheckbox').prop('disabled', false);
                }
            });

            $("#configuracionForm").submit(function (e) {
                e.preventDefault();

                var idRol = $("#IdRol").val();
                var selectedPermisos = $(".permisoCheckbox:checked").map(function () {
                    return this.value;
                }).get();

                $.ajax({
                    type: "POST",
                    url: "/Configuracions/Create",
                    data: {
                        IdRol: idRol,
                        selectedPermisos: selectedPermisos
                    },
                    success: function () {
                        window.location.href = "/Roles/Index";
                    },
                    error: function (error) {
                        console.log("Error:", error);
                        alert("Hubo un error al procesar la solicitud.");
                    }
                });
            });
        });
    </script>



}


@* @model EntreEspeciesNuevo.Models.Configuracion

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/form.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-switch@3.3.4/dist/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Anta&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
</head>



<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card rounded">
            <div class="card-body">
                <center> <h4 class="card-title" style="font-family: Arial, sans-serif;">Permisos</h4></center>
                <hr />
                <form asp-action="Create" id="configuracionForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input type="hidden" asp-for="IdRol" value="@ViewData["RolId"]" />
                    </div>

                    <div class="form-group" style=" font-size: 25px;">
                        <label class="selectAllLabel"><input type="checkbox" id="selectAll"> Seleccionar Todos</label>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6">
                            @if (ViewData["Permisos"] != null)
                            {
                                var permisos = ViewData["Permisos"] as List<Permiso>;
                                var halfCount = (int)Math.Ceiling((double)permisos.Count / 2);
                                for (var i = 0; i < halfCount; i++)
                                {
                                    var permiso = permisos[i];
                                    <div class="checkbox" style="font-size: 18px;">
                                        <label>
                                            <input type="checkbox" class="permisoCheckbox" name="selectedPermisos" value="@permiso.IdPermiso" />
                                            @permiso.NomPermiso
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No hay permisos disponibles.</p>
                            }
                        </div>
                        <div class="col-md-6">
                            @if (ViewData["Permisos"] != null)
                            {
                                var permisos = ViewData["Permisos"] as List<Permiso>;
                                var halfCount = (int)Math.Ceiling((double)permisos.Count / 2);
                                for (var i = halfCount; i < permisos.Count; i++)
                                {
                                    var permiso = permisos[i];
                                    <div class="checkbox" style="font-size: 18px;">
                                        <label>
                                            <input type="checkbox" class="permisoCheckbox" name="selectedPermisos" value="@permiso.IdPermiso" />
                                            @permiso.NomPermiso
                                        </label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group center-btn">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#selectAll').change(function () {
                var isChecked = $(this).prop('checked');
                $('.permisoCheckbox').prop('checked', isChecked);
            });

            $("#configuracionForm").submit(function (e) {
                e.preventDefault();

                var idRol = $("#IdRol").val();
                var selectedPermisos = $(".permisoCheckbox:checked").map(function () {
                    return this.value;
                }).get();

                $.ajax({
                    type: "POST",
                    url: "/Configuracions/Create",
                    data: {
                        IdRol: idRol,
                        selectedPermisos: selectedPermisos
                    },
                    success: function () {
                        window.location.href = "/Roles/Index";
                    },
                    error: function (error) {
                        console.log("Error:", error);
                        alert("Hubo un error al procesar la solicitud.");
                    }
                });
            });
        });
    </script>


    
} *@